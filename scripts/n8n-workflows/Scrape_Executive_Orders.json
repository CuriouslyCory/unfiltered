{
  "name": "Scrape Executive Orders",
  "nodes": [
    {
      "parameters": {},
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        -760,
        -300
      ],
      "id": "188b3b2a-7e9c-4759-bc78-63d6108cec90",
      "name": "When clicking ‘Test workflow’"
    },
    {
      "parameters": {
        "url": "https://www.whitehouse.gov/presidential-actions/",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -540,
        -300
      ],
      "id": "2a77cb65-5531-4afb-a5b4-42b142c462a7",
      "name": "Get Document List"
    },
    {
      "parameters": {
        "operation": "extractHtmlContent",
        "extractionValues": {
          "values": [
            {
              "key": "links",
              "cssSelector": "a",
              "returnValue": "attribute",
              "returnArray": true
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.html",
      "typeVersion": 1.2,
      "position": [
        -320,
        -300
      ],
      "id": "00d1e839-2c1b-40f5-a6ea-166579e07611",
      "name": "Extract Links"
    },
    {
      "parameters": {
        "fieldToSplitOut": "links",
        "options": {}
      },
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        -100,
        -300
      ],
      "id": "1fba3870-958f-4928-ab82-f89184deee3e",
      "name": "Split Links Out"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "f39d02aa-f466-4c95-b429-bdc1d8ab4f30",
              "name": "href",
              "value": "={{ $json.href }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        120,
        -300
      ],
      "id": "bb3129c7-c40e-4d4a-b7d4-9bdaa75ad23f",
      "name": "Keep URLs"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "7624fef0-1d34-42cf-84eb-63dd6becde64",
              "leftValue": "={{ $json.href }}",
              "rightValue": "https://www.whitehouse.gov/presidential-actions/2025",
              "operator": {
                "type": "string",
                "operation": "startsWith"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        340,
        -300
      ],
      "id": "edc6302a-d9a7-4413-a842-3f61bf508e31",
      "name": "Get Document Links"
    },
    {
      "parameters": {
        "url": "={{ $json.href }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        560,
        -300
      ],
      "id": "f2b530f1-1cd1-4f17-a677-980b5d79695e",
      "name": "Get Document HTML"
    },
    {
      "parameters": {
        "operation": "extractHtmlContent",
        "extractionValues": {
          "values": [
            {
              "key": "title",
              "cssSelector": ".wp-block-whitehouse-topper__headline"
            },
            {
              "key": "signingDate",
              "cssSelector": "time",
              "returnValue": "attribute",
              "attribute": "datetime"
            },
            {
              "key": "content",
              "cssSelector": ".entry-content p",
              "returnArray": true
            },
            {
              "key": "documentUrl",
              "cssSelector": "link",
              "returnValue": "attribute",
              "attribute": "href"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.html",
      "typeVersion": 1.2,
      "position": [
        780,
        -300
      ],
      "id": "7639f982-4cc0-4a5f-b62a-2b64d302a4c5",
      "name": "Extract Document Values"
    },
    {
      "parameters": {
        "jsCode": "function generateSlug(title) {\n  return title\n    .replace(/[^a-zA-Z0-9\\s-]/g, ' ') // Remove special characters\n    .replace(/\\s+/g, '-') // Replace spaces with hyphens\n    .replace(/-+/g, '-') // Replace multiple hyphens with a single hyphen\n    .toLowerCase(); // Convert to lowercase\n}\n\n// Loop over input items and add a new field called 'myNewField' to the JSON of each one\nfor (const item of $input.all()) {\n  item.json.content = item.json.content.join(\"\\n\\n\");\n  item.json.title = item.json.title.trim();\n  item.json.slug = generateSlug(item.json.title);\n}\n\nreturn $input.all();"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1000,
        -300
      ],
      "id": "a0c4d601-c8bc-4aa7-8311-c5b00adefa01",
      "name": "Code"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "WITH upserted_document AS (\n    INSERT INTO \"Document\" (\n        \"title\", \n        \"originalDocumentUrl\", \n        \"dateSigned\", \n        \"signer\",\n        \"slug\",\n        \"updatedAt\"\n    )\n    VALUES (\n        '{{ $json.title }}', -- Replace with the actual title\n        '{{ $json.documentUrl }}', -- Replace with the actual URL\n        '{{ $json.signingDate }}', -- Replace with the actual signed date in UTC\n        'Donald J. Trump',\n        '{{ $json.slug }}',\n        NOW()\n    )\n    ON CONFLICT (\"originalDocumentUrl\") DO UPDATE\n    SET\n        \"title\" = EXCLUDED.\"title\",\n        \"dateSigned\" = EXCLUDED.\"dateSigned\",\n        \"signer\" = EXCLUDED.\"signer\",\n        \"slug\" = EXCLUDED.\"slug\",\n        \"updatedAt\" = NOW()\n    RETURNING id -- Return the ID of the upserted document\n)\nINSERT INTO \"DocumentArtifact\" (\n    \"title\", \n    \"content\", \n    \"updatedAt\", \n    \"documentId\"\n)\nVALUES \n    (\n      'Original Document', \n      '{{ $json.content.replace(/'/g, \"''\").replace(/\\\\/g, '\\\\\\\\').replace(/\\0/g, '\\\\0').replace(/\\x08/g, '\\\\b').replace(/\\x09/g, '\\\\t').replace(/\\x1a/g, '\\\\Z').replace(/\\n/g, '\\\\n').replace(/\\r/g, '\\\\r').replace(/\"/g, '\\\\\"') }}',\n      NOW(), \n      (SELECT id FROM upserted_document)\n    )\nON CONFLICT (\"documentId\", \"title\") DO UPDATE\nSET\n    \"content\" = EXCLUDED.\"content\",\n    \"updatedAt\" = NOW();",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        1220,
        -300
      ],
      "id": "03ee2d66-1396-4f61-96a5-3429ade0e26c",
      "name": "Insert Documents and Artifacts",
      "credentials": {
        "postgres": {
          "id": "TgIU2dwnLDnf2bh1",
          "name": "unfilteredDB"
        }
      }
    }
  ],
  "pinData": {},
  "connections": {
    "When clicking ‘Test workflow’": {
      "main": [
        [
          {
            "node": "Get Document List",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Document List": {
      "main": [
        [
          {
            "node": "Extract Links",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract Links": {
      "main": [
        [
          {
            "node": "Split Links Out",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Links Out": {
      "main": [
        [
          {
            "node": "Keep URLs",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Keep URLs": {
      "main": [
        [
          {
            "node": "Get Document Links",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Document Links": {
      "main": [
        [
          {
            "node": "Get Document HTML",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Document HTML": {
      "main": [
        [
          {
            "node": "Extract Document Values",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract Document Values": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Insert Documents and Artifacts",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "4b8ed73a-6c86-4469-8bad-58f0f70456e4",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "1aecb098322aae3ee4bbe2d8612d69724238dc93e216b7ebd9e61223cda7a4f0"
  },
  "id": "fEbk3ufHOsEq3MiT",
  "tags": []
}